/* 整体容器样式 */  
.container {  
  background-size: cover; /* 覆盖整个容器 */  
  background-position: center; /* 居中背景图片 */  
  position: relative; /* 设置定位为相对，以便添加遮罩或其他元素 */  
  height: 100vh; /* 视口高度 */  
  width: 100%; /* 充满宽度 */  
  display: flex; /* 添加flex布局，使子元素能够灵活排列 */  
  flex-direction: column; /* 垂直排列子元素 */  
  align-items: center; /* 水平居中对齐子元素 */  
  justify-content: center; /* 垂直居中对齐子元素，如果需要的话 */  
}  
  
/* 背景图片样式，如果您想要一个固定的背景图片，可以这样设置 */  
.background-image {  
  position: absolute; /* 使用绝对定位，使背景图片相对于.container定位 */  
  top: 0;  
  left: 0;  
  width: 100%;  
  height: 100%;  
  z-index: -1; /* 置于最底层 */  
  object-fit: cover; /* 确保图片覆盖整个容器，不失真 */  
}  
  
/* 上半部分内容样式，如果您需要的话 */  
.upper-content {  
  flex: 1; /* 使上半部分占据剩余空间的大部分，如果需要的话 */  
  display: flex;  
  flex-direction: column; /* 垂直排列子元素 */  
  align-items: center; /* 水平居中对齐子元素 */  
  justify-content: center; /* 垂直居中对齐子元素，如果需要的话 */  
  /* 这里可以根据需要添加更多样式，比如padding, margin等 */  
}  
  
/* 按钮容器样式 */  
.button-container {  
  width: 100%; /* 或者设置一个具体的宽度，根据需要 */  
  display: flex;  
  flex-direction: column; /* 垂直排列按钮 */  
  align-items: center; /* 水平居中对齐按钮 */  
  gap: 16px; /* 按钮之间的间距 */  
  /* 如果需要，可以添加padding或margin来调整位置 */  
}  
  
/* 按钮样式 */  
.button {  
  width: 200px; /* 或者根据需要设置宽度 */  
  height: 50px;  
  background-color: #4669aa;  
  color: #ffffff;  
  text-align: center;  
  line-height: 50px; /* 确保文本垂直居中 */  
  border-radius: 16px; /* 圆角边框 */  
  font-size: 22px; /* 字体大小 */  
  /* 如果需要，可以添加border, shadow等样式 */  
}